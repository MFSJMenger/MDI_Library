language: c
sudo: required

matrix:
  include:
    - os: linux
      compiler: gcc
      env: 
        - CMAKE_COVERAGE_FLAGS="-O0 -coverage"
        - CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
      before_install:
        - sudo apt-get install gfortran
        - sudo pip install -U pytest pytest-cov
    - os: linux
      compiler: gcc
      env: 
        - CMAKE_COVERAGE_FLAGS="-O0 -coverage"
        - CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
      before_install:
        - sudo apt-get install gfortran
        - sudo apt-get install mpich libmpich-dev
        - sudo pip install mpi4py
        - sudo pip install numpy
        - sudo pip install -U pytest
      before_script:
        # Run the MPI tests
        - cd ../tests
        - pytest -k "mpi"
    - os: linux
      compiler: gcc
      env: 
        - OMPI_MCA_btl_base_warn_component_unused=0
        - CMAKE_COVERAGE_FLAGS="-O0 -coverage"
        - CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
      before_install:
        - sudo apt-get install gfortran
        - sudo apt-get install openmpi-bin openmpi-doc libopenmpi-dev
        - sudo pip install mpi4py
        - sudo pip install numpy
        - sudo pip install -U pytest
      before_script:
        # Run the MPI tests
        - cd ../tests
        - pytest -k "mpi"
    - os: osx
      compiler: gcc
      env: 
        - CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
        - CMAKE_COVERAGE_FLAGS=""
      before_install:
        - brew update > /dev/null
        - brew install gcc > /dev/null
        - export FC=gfortran
        - sudo pip install -U pytest
    - os: windows
      compiler: gcc
      env: 
         - PATH=/c/Python36:/c/Python36/Scripts:$PATH
         - CMAKE_COVERAGE_FLAGS=""
         - CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
      before_install:
         # install pytest
         - choco install python --version 3.6.8
         - python -m pip install --upgrade pip
         - pip install -U pytest

         # remove the sh.exe file, which prevents MinGW from working
         - where sh > sh_loc.txt
         - powershell -command "cat sh_loc.txt | rm"
      install:
         # Make Python package build
         - mkdir python_build
         - cd python_build
         - cmake -G "MinGW Makefiles" -Dpython_package=ON ..
         - mingw32-make VERBOSE=1
         - mingw32-make install
         - cd ..

         # Make local install build
         - mkdir build
         - cd build
         - cmake -G "MinGW Makefiles" -Dtest_codes=ON -DCMAKE_INSTALL_PREFIX=./install ..
         - mingw32-make VERBOSE=1
         - mingw32-make install
      script:
         - ls
         - export PATH=$PATH:~/build/MolSSI/MDI_Library/build/install/lib/MDI_Library
         - export PATH=$PATH:~/build/MolSSI/MDI_Library/build/install/include/MDI_Library

         # Fortran executables don't seem to search the $PATH variable
         - cp ~/build/MolSSI/MDI_Library/build/install/lib/MDI_Library/*.dll* .
         - ls tests/MDI_Test_Codes/STUBS_MPI
         - cp tests/MDI_Test_Codes/STUBS_MPI/*.dll* .
         - ls

         # Run the tests
         - cd ../tests
         - pytest -k 'not mpi'

install:
  # Make Python package build
  - mkdir python_build
  - cd python_build
  - cmake -Dpython_package=ON ..
  - make
  - sudo make install
  - cd ..

  # Make local install build
  - mkdir build
  - cd build
  - cmake -Dtest_codes=ON -DCMAKE_INSTALL_PREFIX=./install -DCMAKE_C_FLAGS="$CMAKE_COVERAGE_FLAGS" -DCMAKE_CXX_FLAGS="$CMAKE_COVERAGE_FLAGS" ..
  - make
  - make install
  - ls
  - ls MDI_Library

script:
  - cd ../tests
  - pytest -k 'not mpi'

after_success:
  # get code coverage
  - bash <(curl -s https://codecov.io/bash)
